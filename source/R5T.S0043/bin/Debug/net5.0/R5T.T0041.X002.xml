<?xml version="1.0"?>
<doc>
    <assembly>
        <name>R5T.T0041.X002</name>
    </assembly>
    <members>
        <member name="M:System.IPathOperatorExtensions.IsDirectoryIndicated(R5T.T0041.IPathOperator,System.String)">
            <summary>
            Determines whether a path is directory indicated (ends with 
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.IsDirectoryPath(R5T.T0041.IPathOperator,System.String)">
            <summary>
            Determines whether a path is a directory path.
            Note: there is no way to determine with certainty whether a stringly-typed path is a directory path without reference to a file system.
            However, this method provides the best possible answer.
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.IsFilePath(R5T.T0041.IPathOperator,System.String)">
            <summary>
            Determines whether a path is a file path.
            Note: there is no way to determine with certainty whether a stringly-typed path is a file path without reference to a file system.
            However, this method provides the best possible answer.
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.IsResolved(R5T.T0041.IPathOperator,System.String)">
            <summary>
            Determines whether the path is resolved (no current directory (".") or parent directory ("..") names exist within the path).
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.IsRelativeDirectoryName(R5T.T0041.IPathOperator,System.String)">
            <summary>
            Determines if the path is one of the relative directory names (".", for the current directory, or ".." for the parent directory of the current directory).
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.IsUnresolved(R5T.T0041.IPathOperator,System.String)">
            <summary>
            Determines whether the path is unresolved (any current directory (".") or parent directory ("..") names exist within the path).
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.Combine(R5T.T0041.IPathOperator,System.String,System.Char,System.String)">
            <summary>
            Chooses <see cref="M:System.IPathOperatorExtensions.CombineWithoutModification(R5T.T0041.IPathOperator,System.String,System.String,System.Char)"/> as the default.
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.Combine(R5T.T0041.IPathOperator,System.String,System.String)">
            <summary>
            Uses <see cref="M:System.IPathOperatorExtensions.DetectDirectorySeparatorOrStandard(R5T.T0041.IPathOperator,System.String)"/> to get a directory separator, and chooses <see cref="M:System.IPathOperatorExtensions.CombineEnsuringDirectorySeparator(R5T.T0041.IPathOperator,System.String,System.Char,System.String)"/> as the default.
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.GetPathParts(R5T.T0041.IPathOperator,System.String)">
            <summary>
            Chooses <see cref="M:System.IPathOperatorExtensions.GetNonEmptyPathParts(R5T.T0041.IPathOperator,System.String)"/> as the default.
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.DetectDirectorySeparator(R5T.T0041.IPathOperator,System.String)">
            <summary>
            Chooses <see cref="M:System.IPathOperatorExtensions.DetectDirectorySeparatorOrDefault(R5T.T0041.IPathOperator,System.String)"/> as the default.
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.EnsureStandardDirectorySeparator(R5T.T0041.IPathOperator,System.String)">
            <summary>
            Selects the standard directory separator.
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.TryDetectDirectorySeparatorOrDefault(R5T.T0041.IPathOperator,System.String,System.Char@)">
            <summary>
            Attempts to detect the directory separator (Windows or non-Windows) used within a path segment.
            Returns true if a directory separator can be detected, false otherwise.
            If no default directory separator is detected, the output <paramref name="directorySeparator"/> is set to the <see cref="P:R5T.T0041.X001.DirectorySeparators.Default"/> value.
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.TryDetectDirectorySeparator(R5T.T0041.IPathOperator,System.String,System.Char@,System.Char)">
            <summary>
            Attempts to detect the directory separator (Windows or non-Windows) used within a path segment.
            Returns true if the a directory separator can be detected, and sets the output <paramref name="directorySeparator"/> to the detected value.
            Returns false if a directory separator cannot be detected, and sets the output <paramref name="directorySeparator"/> to the provided <paramref name="defaultDirectorySeparator"/> value.
            Returns true if both (mixed) directory separators are detected, and sets the sets the output <paramref name="directorySeparator"/> to the dominant value.
            A path segment might have both Windows and non-Windows directory separators. Whichever directory separator occurs first in the path segment (thus, closer to the root) is dominant, and is returned as the path segment's directory separator.
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.TryDetectDirectorySeparator(R5T.T0041.IPathOperator,System.String,System.String@,System.Char)">
            <summary>
            Attempts to detect the directory separator (Windows or non-Windows) used within a path segment.
            Returns true if the a directory separator can be detected, and sets the output <paramref name="directorySeparator"/> to the detected value.
            Returns false if a directory separator cannot be detected, and sets the output <paramref name="directorySeparator"/> to the provided <paramref name="defaultDirectorySeparator"/> value.
            Returns true if both (mixed) directory separators are detected, and sets the sets the output <paramref name="directorySeparator"/> to the dominant value.
            A path segment might have both Windows and non-Windows directory separators. Whichever directory separator occurs first in the path segment (thus, closer to the root) is dominant, and is returned as the path segment's directory separator.
            </summary>
        </member>
        <member name="M:System.IPathOperatorExtensions.VerifyIsValid(R5T.T0041.IPathOperator,System.String)">
            <summary>
            The primary method to call when wishing to check that a path is valid.
            </summary>
        </member>
        <member name="T:R5T.T0041.X002.Documentation">
            <summary>
            <see cref="T:R5T.T0041.IPathOperator"/> and related operator basic extensions for stringly-typed paths.
            </summary>
        </member>
    </members>
</doc>
